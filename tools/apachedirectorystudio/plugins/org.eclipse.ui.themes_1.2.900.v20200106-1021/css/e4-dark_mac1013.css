/*******************************************************************************
 * Copyright (c) 2010, 2014 Andrea Guarinoni and others.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Andrea Guarinoni <andrea.guarinoni.dev@outlook.com> - initial API and implementation
 *******************************************************************************/

/*******************************************************************************
 * The following bugs are referred to in this style sheet
 * 2.) Bug 430052 - Imported rules cannot be overridden
 *******************************************************************************/


/* @import url("platform:/plugin/org.eclipse.ui.themes/css/e4-dark.css"); Bug 430052 */
@import url("platform:/plugin/org.eclipse.ui.themes/css/dark/e4-dark_ide_colorextensions.css");
@import url("platform:/plugin/org.eclipse.ui.themes/css/dark/e4-dark_globalstyle.css"); /* Remove this to have ONLY the main IDE shell dark */
@import url("platform:/plugin/org.eclipse.ui.themes/css/dark/e4-dark_partstyle.css");
@import url("platform:/plugin/org.eclipse.ui.themes/css/dark/e4-dark_tabstyle.css");
@import url("platform:/plugin/org.eclipse.ui.themes/css/dark/e4-dark-drag-styling.css");

.MTrimmedWindow.topLevel {
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: 1px;
	margin-right: 1px;
}

.MPartStack, .MPart {
    font-family: '#org-eclipse-ui-workbench-TAB_TEXT_FONT';
}



.MPart.busy {
    font-style: italic;
}

.MPart.highlighted {
    font-weight: bold;
}

CTabItem,
CTabItem CLabel {
    background-color: '#org-eclipse-ui-workbench-INACTIVE_TAB_BG_END'; /* HACK for background of CTabFolder inner Toolbars */
    color: '#org-eclipse-ui-workbench-INACTIVE_TAB_UNSELECTED_TEXT_COLOR';
}
CTabItem:selected,
CTabItem:selected CLabel {
    color: '#org-eclipse-ui-workbench-INACTIVE_TAB_SELECTED_TEXT_COLOR';
}

.MPartStack.active > CTabItem,
.MPartStack.active > CTabItem CLabel {
    background-color: '#org-eclipse-ui-workbench-ACTIVE_TAB_BG_END'; /* HACK for background of CTabFolder inner Toolbars */
    color: '#org-eclipse-ui-workbench-ACTIVE_TAB_UNSELECTED_TEXT_COLOR';
}
.MPartStack.active > CTabItem:selected,
.MPartStack.active > CTabItem:selected CLabel {
    color: '#org-eclipse-ui-workbench-ACTIVE_TAB_SELECTED_TEXT_COLOR';
}

.MPartStack.active.noFocus > CTabItem:selected {
    color: '#org-eclipse-ui-workbench-ACTIVE_NOFOCUS_TAB_SELECTED_TEXT_COLOR';
}

CTabItem.busy {
    color: #888888;
}

.MToolControl.TrimStack {
    /*frame-image:  url(./gtkTSFrame.png);*/
    handle-image:  url(./dragHandle.png);
    /*frame-image-rotated:  url(./gtkTSFrame-rotated.png);*/
    handle-image-rotated:  url(./dragHandle-rotated.png);
    frame-cuts: 5px 1px 5px 16px;
}


CTabFolder.MArea .MPartStack,CTabFolder.MArea .MPartStack.active {
    swt-shadow-visible: false;
}


CTabFolder Canvas {
    background-color: #2F2F2F;
    color: #CCC;
}

.MPartStack.active CTabFolder Canvas {
    background-color: #262626;
    color: #CCC;
}

/* #################### Bottom Status Bar ######################## */

StatusLine,
ImageBasedFrame,
#org-eclipse-ui-StatusLine,
#org-eclipse-ui-StatusLine CLabel,
#org-eclipse-ui-ProgressBar,
#org-eclipse-ui-ProgressBar Canvas {
     color:#eeeeee;
}


/* ###################### Global Styles ########################## */

TabFolder {
    /* background-color is not applied to the whole button,
       but text color is changed, so it appear light on light */
    background-color: #515658;
    color: #222;
}

Button {
    /* background-color is not applied to the whole button,
       but text color is changed, so it appear light on light */
    background-color: #2F2F2F;
    color: #CCCCCC;
}
Button[style~='SWT.CHECK'] {
    /* currently, Button object isn't consistent (eg. also a checkbox is seen as Button) */
    /* so, css rules applied to Button have to be overridden for non-Button matches */
    background-color: #515658;
    color: #ddd;
}
Button[style~='SWT.RADIO'] {
    /* currently, Button object isn't consistent (eg. also a checkbox is seen as Button) */
    /* so, css rules applied to Button have to be overridden for non-Button matches */
    background-color: #515658;
    color: #ddd;
}

Combo {
    background-color: #949DA5; 
    color: #222;  /* background of drop-drown list is hard-coded to white */
}
Combo:selected {
    background-color: #41464A;
    color: #FFF;
}

